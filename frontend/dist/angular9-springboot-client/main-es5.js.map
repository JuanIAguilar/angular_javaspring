{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/address-details/address-details.component.ts","webpack:///src/app/address-details/address-details.component.html","webpack:///src/app/address.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.module.ts","webpack:///src/app/create-address/create-address.component.ts","webpack:///src/app/create-address/create-address.component.html","webpack:///src/app/create-employee/create-employee.component.ts","webpack:///src/app/create-employee/create-employee.component.html","webpack:///src/app/employee-details/employee-details.component.ts","webpack:///src/app/employee-details/employee-details.component.html","webpack:///src/app/employee-list/employee-list.component.ts","webpack:///src/app/employee-list/employee-list.component.html","webpack:///src/app/employee.service.ts","webpack:///src/app/employee.ts","webpack:///src/app/update-employee/update-employee.component.ts","webpack:///src/app/update-employee/update-employee.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddressDetailsComponent","selector","templateUrl","styleUrls","Address","AppComponent","title","AppModule","declarations","imports","providers","bootstrap","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","CreateAddressComponent","employeeService","router","address","addressChange","submitted","addAddress","employee","subscribe","data","console","log","emit","error","save","addressSubmit","CreateEmployeeComponent","createEmployee","gotoList","navigate","onSubmit","EmployeeDetailsComponent","route","createAddress","loadData","snapshot","params","getEmployee","event","list","EmployeeListComponent","searchText","reloadData","employees","getEmployeesList","deleteEmployee","searchEmployee","buscarTexto","EmployeeService","http","baseUrl","get","post","value","put","responseType","text","providedIn","Employee","UpdateEmployeeComponent","updateEmployee","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Address } from '../address';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-address-details',\n  templateUrl: './address-details.component.html',\n  styleUrls: ['./address-details.component.css']\n})\nexport class AddressDetailsComponent {\n\n  @Input() addresses;\n\n}\n","<div *ngIf=\"addresses && addresses.length > 0; else elseBlock\">\n    <div *ngFor=\"let address of addresses\" >\n        <hr>\n        <div>\n            <label><b>Street: </b></label> {{address.streetAddress}}\n        </div>\n        <div>\n            <label><b>Postal Code: </b></label> {{address.postalCode}}\n        </div>\n        <div>\n            <label><b>City: </b></label> {{address.city}}\n        </div>\n        <div>\n            <label><b>State Province </b></label> {{address.stateProvince}}\n        </div>\n        <div>\n            <label><b>Country: </b></label> {{address.country}}\n        </div>\n        \n    </div>\n</div>\n<ng-template #elseBlock>\n    <div>\n        <p>The employee doesn`t have a registered address</p>\n    </div>\n</ng-template>\n","export class Address {\r\n    id: number;\r\n    streetAddress: string;\r\n    postalCode: string;\r\n    city: string;\r\n    stateProvince: string;\r\n    country: string;\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Ejercicio fleni';\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n        <a routerLink=\"employees\" class=\"nav-link\" routerLinkActive=\"active\">Employee List</a>\n    </li>\n    <li class=\"nav-item\">\n        <a routerLink=\"add\" class=\"nav-link\" routerLinkActive=\"active\">Add Employee</a>\n    </li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <hr>\n  <div class=\"card\">\n    <div class=\"card-body\">\n        <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<footer class=\"footer\">\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\nimport { CreateAddressComponent } from './create-address/create-address.component';\nimport { AddressDetailsComponent } from './address-details/address-details.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateEmployeeComponent,\n    EmployeeDetailsComponent,\n    EmployeeListComponent,\n    UpdateEmployeeComponent,\n    CreateAddressComponent,\n    AddressDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { EmployeeDetailsComponent } from './employee-details/employee-details.component';\r\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'employees', pathMatch: 'full' },\r\n  { path: 'employees', component: EmployeeListComponent },\r\n  { path: 'add', component: CreateEmployeeComponent },\r\n  { path: 'update/:id', component: UpdateEmployeeComponent },\r\n  { path: 'details/:id', component: EmployeeDetailsComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { EmployeeService } from '../employee.service';\nimport { Address } from '../address';\nimport { Employee } from '../employee';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-address',\n  templateUrl: './create-address.component.html',\n  styleUrls: ['./create-address.component.css']\n})\nexport class CreateAddressComponent implements OnInit {\n\n  address: Address = new Address();\n  @Input() employee;\n  @Output() addressChange = new EventEmitter();\n  submitted = false;\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  save() {\n    this.employeeService\n    .addAddress(this.employee.id, this.address).subscribe(data => {\n      console.log(data)\n      this.addressChange.emit();\n    }, \n    error => console.log(error));\n  }\n\n  addressSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n}","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n    <form #addressForm=\"ngForm\" (ngSubmit)=\"addressSubmit()\">\n        <h4>NEW ADDRESS</h4>\n        <div class=\"form-group\">\n            <label for=\"name\">Street</label>\n            <input type=\"text\" class=\"form-control\" id=\"streetAddress\" required [(ngModel)]=\"address.streetAddress\" name=\"streetAddress\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"name\">Postal Code</label>\n            <input type=\"text\" class=\"form-control\" id=\"postalCode\" required [(ngModel)]=\"address.postalCode\" name=\"postalCode\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"name\">City</label>\n            <input type=\"text\" class=\"form-control\" id=\"city\" required [(ngModel)]=\"address.city\" name=\"city\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"name\">State Province</label>\n            <input type=\"text\" class=\"form-control\" id=\"stateProvince\" required [(ngModel)]=\"address.stateProvince\" name=\"stateProvince\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"name\">Country</label>\n            <input type=\"text\" class=\"form-control\" id=\"country\" required [(ngModel)]=\"address.country\" name=\"country\">\n        </div>\n\n        <br>\n\n        <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n        <br>\n    </form>\n</div>","import { EmployeeService } from '../employee.service';\nimport { Employee } from '../employee';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  employee: Employee = new Employee();\n  submitted = false;\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  newEmployee(): void {\n    this.submitted = false;\n    this.employee = new Employee();\n  }\n\n  save() {\n    this.employeeService\n    .createEmployee(this.employee).subscribe(data => {\n      console.log(data)\n      this.employee = new Employee();\n      this.gotoList();\n    }, \n    error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n}","<h3>Create Employee</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"emailId\" required [(ngModel)]=\"employee.email\" name=\"email\">\n    </div>\n      \n    <div class=\"form-group\">\n      <label for=\"name\">Phone Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" required [(ngModel)]=\"employee.phoneNumber\" name=\"phoneNumber\">\n    </div>\n      \n    <div class=\"form-group\">\n      <label for=\"name\">Hire Date</label>\n      <input type=\"date\" class=\"form-control\" id=\"hireDate\" required [(ngModel)]=\"employee.hireDate\" name=\"hireDate\">\n    </div>\n      \n    <div class=\"form-group\">\n      <label for=\"name\">Salary</label>\n      <input type=\"number\" class=\"form-control\" id=\"salary\" required [(ngModel)]=\"employee.salary\" name=\"salary\">\n    </div>\n      \n    <div class=\"form-group\">\n      <label for=\"name\">Commission Percent</label>\n      <input type=\"number\" class=\"form-control\" id=\"commissionPct\" required [(ngModel)]=\"employee.commissionPct\" name=\"commissionPct\">\n    </div>\n\n    <br>\n\n     \n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You submitted successfully!</h4>\n  <!-- <button class=\"btn btn-success\" (click)=\"newEmployee()\">Add</button> -->\n</div>","import { Employee } from '../employee';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { EmployeeListComponent } from '../employee-list/employee-list.component';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n  createAddress = false;\n  newEmployee: Employee;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  list(){\n    this.router.navigate(['employees']);\n  }\n  \n  newAddress() {\n    this.createAddress = true;\n  }\n  \n  loadData(){\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n    \n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n  \n  handleAddressChange(event){\n    console.log(\"hola\");\n    this.loadData();\n  }\n}","<h2>Employee Details</h2> \n\n<hr/>\n<div *ngIf=\"employee\">\n  <div>\n    <label><b>First Name: </b></label> {{employee.firstName}}\n  </div>\n  <div>\n    <label><b>Last Name: </b></label> {{employee.lastName}}\n  </div>\n  <div>\n    <label><b>Email: </b></label> {{employee.email}}\n  </div>\n  <div>\n    <label><b>Phone Number: </b></label> {{employee.phoneNumber}}\n  </div> \n  <div>\n    <label><b>Hire Date: </b></label> {{employee.hireDate}}\n  </div> \n  <div>\n    <label><b>Salary: </b></label> {{employee.salary}}\n  </div> \n  <div>\n    <label><b>Commission Percent: </b></label> {{employee.commissionPct}} %\n  </div>\n  <br>\n  <div>\n    <h4><b>ADDRESSES </b> <button (click)=\"newAddress()\" class=\"btn btn-primary\">New</button></h4>\n  </div>\n    <app-create-address [employee]=\"employee\" (addressChange)=\"handleAddressChange($event)\" [hidden]=\"!createAddress\"></app-create-address>\n    <app-address-details [addresses]=\"employee.addresses\"></app-address-details>\n</div>\n\n<br>\n<br>\n<button (click)=\"list()\" class=\"btn btn-primary\">Back to Employee List</button><br>","import { EmployeeDetailsComponent } from '../employee-details/employee-details.component';\nimport { Observable } from \"rxjs\";\nimport { EmployeeService } from \"../employee.service\";\nimport { Employee } from \"../employee\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-employee-list\",\n  templateUrl: \"./employee-list.component.html\",\n  styleUrls: [\"./employee-list.component.css\"]\n})\nexport class EmployeeListComponent implements OnInit {\n  employees: Observable<Employee[]>;\n  searchText = '';\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.employees = this.employeeService.getEmployeesList();\n  }\n\n  deleteEmployee(id: number) {\n    this.employeeService.deleteEmployee(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  employeeDetails(id: number){\n    this.router.navigate(['details', id]);\n  }\n  \n  buscarTexto(){\n    if(this.searchText != \"\"){\n        this.employees = this.employeeService.searchEmployee(this.searchText);\n    } else {\n        this.reloadData();\n    }\n  }\n}","<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Employee List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <div class=\"input-group\">\n      <input type=\"text\" class=\"form-control\" id=\"search-text\" aria-describedby=\"search-text\" \n        [(ngModel)]=\"searchText\" placeholder=\"Enter text to search\">\n      <div class=\"input-group-append\">\n        <input type=\"button\" value=\"Search\" (click)=\"buscarTexto()\" class=\"btn btn-outline-secondary\"/>\n      </div>\n    </div>\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n          <th>Phone Number</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let employee of employees | async\">\n          <td>{{employee.firstName}}</td>\n          <td>{{employee.lastName}}</td>\n          <td>{{employee.email}}</td>\n          <td>{{employee.phoneNumber}}</td>\n          <td><button (click)=\"deleteEmployee(employee.id)\" class=\"btn btn-danger\">Delete</button>\n              <button (click)=\"employeeDetails(employee.id)\" class=\"btn btn-info\" style=\"margin-left: 10px\">Details</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private baseUrl = 'http://localhost:8080/employees';\n\n  constructor(private http: HttpClient) { }\n\n  getEmployee(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createEmployee(employee: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, employee);\n  }\n\n  updateEmployee(id: number, value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${id}`, value);\n  }\n\n  deleteEmployee(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getEmployeesList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n      \n  searchEmployee(text: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/search/${text}`);\n  }\n      \n  addAddress(id: number, value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${id}/address`, value);\n  }\n}","import { Address } from './address';\r\n\r\nexport class Employee {\r\n    id: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phoneNumber: string;\r\n    hireDate: Date;\r\n    salary: number;\r\n    commissionPct: number;\r\n    addresses?: Address[];\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n  submitted = false\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n    \n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n\n  updateEmployee() {\n    this.employeeService.updateEmployee(this.id, this.employee)\n      .subscribe(data => {\n        console.log(data);\n        this.employee = new Employee();\n        this.gotoList();\n      }, error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.updateEmployee();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n}","<h3>Update Employee</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Email Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"emailId\" required [(ngModel)]=\"employee.email\" name=\"email\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
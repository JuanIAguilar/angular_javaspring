{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/address-details/address-details.component.ts","./src/app/address-details/address-details.component.html","./src/app/address.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.module.ts","./src/app/create-address/create-address.component.ts","./src/app/create-address/create-address.component.html","./src/app/create-employee/create-employee.component.ts","./src/app/create-employee/create-employee.component.html","./src/app/employee-details/employee-details.component.ts","./src/app/employee-details/employee-details.component.html","./src/app/employee-list/employee-list.component.ts","./src/app/employee-list/employee-list.component.html","./src/app/employee.service.ts","./src/app/employee.ts","./src/app/update-employee/update-employee.component.ts","./src/app/update-employee/update-employee.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAiD;;;;ICA7C,sEACI;IAAA,gEACA;IAAA,sEACI;IAAA,wEAAO;IAAA,oEAAG;IAAA,mEAAQ;IAAA,4DAAI;IAAA,4DAAQ;IAAC,uDACnC;IAAA,4DAAM;IACN,sEACI;IAAA,wEAAO;IAAA,oEAAG;IAAA,yEAAa;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDACxC;IAAA,4DAAM;IACN,uEACI;IAAA,yEAAO;IAAA,qEAAG;IAAA,kEAAM;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDACjC;IAAA,4DAAM;IACN,uEACI;IAAA,yEAAO;IAAA,qEAAG;IAAA,2EAAe;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDAC1C;IAAA,4DAAM;IACN,uEACI;IAAA,yEAAO;IAAA,qEAAG;IAAA,qEAAS;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDACpC;IAAA,4DAAM;IAEV,4DAAM;;;IAfiC,0DACnC;IADmC,qGACnC;IAEwC,0DACxC;IADwC,kGACxC;IAEiC,0DACjC;IADiC,4FACjC;IAE0C,0DAC1C;IAD0C,qGAC1C;IAEoC,0DACpC;IADoC,+FACpC;;;IAjBR,sEACI;IAAA,0HACI;IAkBR,4DAAM;;;IAnBG,0DAAiC;IAAjC,sFAAiC;;;IAqBtC,sEACI;IAAA,oEAAG;IAAA,yGAA8C;IAAA,4DAAI;IACzD,4DAAM;;ADhBH,MAAM,uBAAuB;;8FAAvB,uBAAuB;uGAAvB,uBAAuB;QCRpC,mHACI;QAoBJ,+MACI;;;QAtBC,2GAAyD;;6FDQjD,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;kBAGE,mDAAK;;;;;;;;;;;;;;AEVR;AAAA;AAAO,MAAM,OAAO;CAOnB;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,iBAAiB,CAAC;KAC3B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEACE;QACA,wEACE;QAAA,wEACI;QAAA,uEAAqE;QAAA,wEAAa;QAAA,4DAAI;QAC1F,4DAAK;QACL,wEACI;QAAA,uEAA+D;QAAA,uEAAY;QAAA,4DAAI;QACnF,4DAAK;QACP,4DAAK;QACP,4DAAM;QACN,yEACE;QAAA,gEACA;QAAA,yEAAgC;QAAA,wDAAS;QAAA,4DAAK;QAC9C,iEACA;QAAA,0EACE;QAAA,0EACI;QAAA,4EAA+B;QACnC,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,wEACS;;QAVyB,2DAAS;QAAT,0EAAS;;6FDN9B,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AACT;AACuC;AACG;AACT;AACxB;AAC8B;AACH;AACG;;AAoB/E,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;SACjB;mIAIU,SAAS,mBAjBlB,2DAAY;QACZ,kGAAuB;QACvB,qGAAwB;QACxB,4FAAqB;QACrB,kGAAuB;QACvB,gGAAsB;QACtB,mGAAuB,aAGvB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;6FAKP,SAAS;cAnBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kGAAuB;oBACvB,qGAAwB;oBACxB,4FAAqB;oBACrB,kGAAuB;oBACvB,gGAAsB;oBACtB,mGAAuB;iBACxB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,qEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyF;AACH;AAC7C;AACc;AACyB;AACM;;;AAEtF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;IACxD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAqB,EAAE;IACvD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,kGAAuB,EAAE;IACnD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,kGAAuB,EAAE;IAC1D,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,qGAAwB,EAAE;CAC7D,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACjB;AAE0C;AACtC;;;;;AAOlC,MAAM,sBAAsB;IAOjC,YAAoB,eAAgC,EAC1C,MAAc;QADJ,oBAAe,GAAf,eAAe,CAAiB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QANxB,YAAO,GAAY,IAAI,gDAAO,EAAE,CAAC;QAEvB,kBAAa,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC7C,cAAS,GAAG,KAAK,CAAC;IAGU,CAAC;IAE7B,QAAQ;IACR,CAAC;IAED,IAAI;QACF,IAAI,CAAC,eAAe;aACnB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC5B,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;;4FAzBU,sBAAsB;sGAAtB,sBAAsB;QCXnC,yEACI;QAAA,6EACI;QADwB,kJAAY,mBAAe,IAAC;QACpD,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,yEACI;QAAA,2EAAkB;QAAA,iEAAM;QAAA,4DAAQ;QAChC,2EACJ;QADwE,yMAAmC;QAAvG,4DACJ;QAAA,4DAAM;QAEN,yEACI;QAAA,4EAAkB;QAAA,uEAAW;QAAA,4DAAQ;QACrC,4EACJ;QADqE,uMAAgC;QAAjG,4DACJ;QAAA,4DAAM;QAEN,0EACI;QAAA,4EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,4EACJ;QAD+D,iMAA0B;QAArF,4DACJ;QAAA,4DAAM;QAEN,0EACI;QAAA,4EAAkB;QAAA,0EAAc;QAAA,4DAAQ;QACxC,4EACJ;QADwE,0MAAmC;QAAvG,4DACJ;QAAA,4DAAM;QAEN,0EACI;QAAA,4EAAkB;QAAA,mEAAO;QAAA,4DAAQ;QACjC,4EACJ;QADkE,oMAA6B;QAA3F,4DACJ;QAAA,4DAAM;QAEN,iEAEA;QAAA,8EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC7D,iEACJ;QAAA,4DAAO;QACX,4DAAM;;QAjCD,iFAAoB;QAKuD,0DAAmC;QAAnC,8FAAmC;QAKtC,0DAAgC;QAAhC,2FAAgC;QAKtC,0DAA0B;QAA1B,qFAA0B;QAKjB,0DAAmC;QAAnC,8FAAmC;QAKzC,0DAA6B;QAA7B,wFAA6B;;6FDd1F,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;kBAIE,mDAAK;;kBACL,oDAAM;;;;;;;;;;;;;;AEfT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACf;AACW;AACT;;;;;AAOlC,MAAM,uBAAuB;IAKlC,YAAoB,eAAgC,EAC1C,MAAc;QADJ,oBAAe,GAAf,eAAe,CAAiB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QAJxB,aAAQ,GAAa,IAAI,kDAAQ,EAAE,CAAC;QACpC,cAAS,GAAG,KAAK,CAAC;IAGU,CAAC;IAE7B,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,kDAAQ,EAAE,CAAC;IACjC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,eAAe;aACnB,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,kDAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;;8FAjCU,uBAAuB;uGAAvB,uBAAuB;QCVpC,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QACxB,yEACE;QAAA,0EACE;QADI,mJAAY,cAAU,IAAC;QAC3B,yEACE;QAAA,2EAAkB;QAAA,qEAAU;QAAA,4DAAQ;QACpC,2EACF;QADkE,uMAAgC;QAAhG,4DACF;QAAA,4DAAM;QAEN,yEACE;QAAA,2EAAkB;QAAA,qEAAS;QAAA,4DAAQ;QACnC,4EACF;QADiE,uMAA+B;QAA9F,4DACF;QAAA,4DAAM;QAEN,0EACE;QAAA,4EAAkB;QAAA,iEAAK;QAAA,4DAAQ;QAC/B,4EACF;QADgE,oMAA4B;QAA1F,4DACF;QAAA,4DAAM;QAEN,0EACE;QAAA,4EAAkB;QAAA,wEAAY;QAAA,4DAAQ;QACtC,4EACF;QADoE,0MAAkC;QAApG,4DACF;QAAA,4DAAM;QAEN,0EACE;QAAA,4EAAkB;QAAA,qEAAS;QAAA,4DAAQ;QACnC,4EACF;QADiE,uMAA+B;QAA9F,4DACF;QAAA,4DAAM;QAEN,0EACE;QAAA,4EAAkB;QAAA,kEAAM;QAAA,4DAAQ;QAChC,4EACF;QADiE,qMAA6B;QAA5F,4DACF;QAAA,4DAAM;QAEN,0EACE;QAAA,4EAAkB;QAAA,8EAAkB;QAAA,4DAAQ;QAC5C,6EACF;QADwE,4MAAoC;QAA1G,4DACF;QAAA,4DAAM;QAEN,iEAGA;QAAA,8EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;QAEN,2EACE;QAAA,sEAAI;QAAA,uFAA2B;QAAA,4DAAK;QAEtC,4DAAM;;QA/CD,0DAAoB;QAApB,iFAAoB;QAI6C,0DAAgC;QAAhC,2FAAgC;QAKjC,0DAA+B;QAA/B,0FAA+B;QAKhC,0DAA4B;QAA5B,uFAA4B;QAKxB,0DAAkC;QAAlC,6FAAkC;QAKrC,0DAA+B;QAA/B,0FAA+B;QAK/B,0DAA6B;QAA7B,wFAA6B;QAKtB,0DAAoC;QAApC,+FAAoC;QAU3G,0DAAqB;QAArB,kFAAqB;;6FDnCb,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACkB;AACH;AAEG;;;;;;;;;ICDzD,sEACE;IAAA,sEACE;IAAA,wEAAO;IAAA,oEAAG;IAAA,uEAAY;IAAA,4DAAI;IAAA,4DAAQ;IAAC,uDACrC;IAAA,4DAAM;IACN,sEACE;IAAA,wEAAO;IAAA,oEAAG;IAAA,sEAAW;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDACpC;IAAA,4DAAM;IACN,uEACE;IAAA,yEAAO;IAAA,qEAAG;IAAA,mEAAO;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDAChC;IAAA,4DAAM;IACN,uEACE;IAAA,yEAAO;IAAA,qEAAG;IAAA,0EAAc;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDACvC;IAAA,4DAAM;IACN,uEACE;IAAA,yEAAO;IAAA,qEAAG;IAAA,uEAAW;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDACpC;IAAA,4DAAM;IACN,uEACE;IAAA,yEAAO;IAAA,qEAAG;IAAA,oEAAQ;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDACjC;IAAA,4DAAM;IACN,uEACE;IAAA,yEAAO;IAAA,qEAAG;IAAA,gFAAoB;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDAC7C;IAAA,4DAAM;IACN,iEACA;IAAA,uEACE;IAAA,sEAAI;IAAA,qEAAG;IAAA,sEAAU;IAAA,4DAAI;IAAC,6EAAuD;IAA/C,8TAAsB;IAAyB,+DAAG;IAAA,4DAAS;IAAA,4DAAK;IAChG,4DAAM;IACJ,yFAAuI;IAA7F,+WAA6C;IAA2B,4DAAqB;IACvI,qFAA4E;IAChF,4DAAM;;;IA1BiC,0DACrC;IADqC,qGACrC;IAEoC,0DACpC;IADoC,oGACpC;IAEgC,0DAChC;IADgC,iGAChC;IAEuC,0DACvC;IADuC,uGACvC;IAEoC,0DACpC;IADoC,oGACpC;IAEiC,0DACjC;IADiC,kGACjC;IAE6C,0DAC7C;IAD6C,2GAC7C;IAKsB,0DAAqB;IAArB,qFAAqB;IACpB,0DAAgC;IAAhC,gGAAgC;;ADnBlD,MAAM,wBAAwB;IAOnC,YAAoB,KAAqB,EAAS,MAAc,EACtD,eAAgC;QADtB,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QACtD,oBAAe,GAAf,eAAe,CAAiB;QAJ1C,kBAAa,GAAG,KAAK,CAAC;IAIwB,CAAC;IAE/C,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,kDAAQ,EAAE,CAAC;QAE/B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAE3C,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;aACtC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,mBAAmB,CAAC,KAAK;QACvB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;;gGArCU,wBAAwB;wGAAxB,wBAAwB;QCXrC,qEAAI;QAAA,2EAAgB;QAAA,4DAAK;QAEzB,gEACA;QAAA,sHACE;QA6BF,gEACA;QAAA,gEACA;QAAA,4EAAiD;QAAzC,gJAAS,UAAM,IAAC;QAAyB,gFAAqB;QAAA,4DAAS;QAAA,gEAAI;;QAhC9E,0DAAgB;QAAhB,8EAAgB;;6FDQR,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AAEJ;AACT;;;;;;;;ICkBjC,qEACE;IAAA,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,6EAAqE;IAA7D,gXAAqC;IAAwB,kEAAM;IAAA,4DAAS;IACpF,8EAA8F;IAAtF,iXAAsC;IAAgD,mEAAO;IAAA,4DAAS;IAClH,4DAAK;IACP,4DAAK;;;IAPC,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAqB;IAArB,qFAAqB;IACrB,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAwB;IAAxB,wFAAwB;;ADf/B,MAAM,qBAAqB;IAIhC,YAAoB,eAAgC,EAC1C,MAAc;QADJ,oBAAe,GAAf,eAAe,CAAiB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QAHxB,eAAU,GAAG,EAAE,CAAC;IAGW,CAAC;IAE5B,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;IAC3D,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC;aACpC,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,eAAe,CAAC,EAAU;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,UAAU,IAAI,EAAE,EAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACzE;aAAM;YACH,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACH,CAAC;;0FAnCU,qBAAqB;qGAArB,qBAAqB;QCZlC,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACxB,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,2EAEA;QADE,6LAAwB;QAD1B,4DAEA;QAAA,yEACE;QAAA,2EACF;QADsC,4IAAS,iBAAa,IAAC;QAA3D,4DACF;QAAA,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAClB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,kHACE;;QAQJ,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;;QA5BE,0DAAwB;QAAxB,mFAAwB;QAgBpB,2DAA0C;QAA1C,oJAA0C;;6FDXzC,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAA2C;AACO;;;AAM3C,MAAM,eAAe;IAI1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,iCAAiC,CAAC;IAEZ,CAAC;IAEzC,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,cAAc,CAAC,QAAgB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,cAAc,CAAC,EAAU,EAAE,KAAU;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IACvD,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,cAAc,CAAC,IAAY;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,WAAW,IAAI,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,UAAU,CAAC,EAAU,EAAE,KAAU;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAC/D,CAAC;;8EAhCU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAO,MAAM,QAAQ;CAUpB;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACX;AACkB;AACH;;;;;AAO/C,MAAM,uBAAuB;IAMlC,YAAoB,KAAqB,EAAS,MAAc,EACtD,eAAgC;QADtB,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QACtD,oBAAe,GAAf,eAAe,CAAiB;QAH1C,cAAS,GAAG,KAAK;IAG6B,CAAC;IAE/C,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,kDAAQ,EAAE,CAAC;QAE/B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAE3C,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;aACtC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC;aACxD,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,kDAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;;8FArCU,uBAAuB;uGAAvB,uBAAuB;QCVpC,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QACxB,yEACE;QAAA,0EACE;QADI,mJAAY,cAAU,IAAC;QAC3B,yEACE;QAAA,2EAAkB;QAAA,qEAAU;QAAA,4DAAQ;QACpC,2EACF;QADkE,uMAAgC;QAAhG,4DACF;QAAA,4DAAM;QAEN,yEACE;QAAA,2EAAkB;QAAA,qEAAS;QAAA,4DAAQ;QACnC,4EACF;QADiE,uMAA+B;QAA9F,4DACF;QAAA,4DAAM;QAEN,0EACE;QAAA,4EAAkB;QAAA,oEAAQ;QAAA,4DAAQ;QAClC,4EACF;QADgE,oMAA4B;QAA1F,4DACF;QAAA,4DAAM;QAEN,6EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;;QAnBD,0DAAoB;QAApB,iFAAoB;QAI6C,0DAAgC;QAAhC,2FAAgC;QAKjC,0DAA+B;QAA/B,0FAA+B;QAKhC,0DAA4B;QAA5B,uFAA4B;;6FDLnF,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AETD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Address } from '../address';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-address-details',\n  templateUrl: './address-details.component.html',\n  styleUrls: ['./address-details.component.css']\n})\nexport class AddressDetailsComponent {\n\n  @Input() addresses;\n\n}\n","<div *ngIf=\"addresses && addresses.length > 0; else elseBlock\">\n    <div *ngFor=\"let address of addresses\" >\n        <hr>\n        <div>\n            <label><b>Street: </b></label> {{address.streetAddress}}\n        </div>\n        <div>\n            <label><b>Postal Code: </b></label> {{address.postalCode}}\n        </div>\n        <div>\n            <label><b>City: </b></label> {{address.city}}\n        </div>\n        <div>\n            <label><b>State Province </b></label> {{address.stateProvince}}\n        </div>\n        <div>\n            <label><b>Country: </b></label> {{address.country}}\n        </div>\n        \n    </div>\n</div>\n<ng-template #elseBlock>\n    <div>\n        <p>The employee doesn`t have a registered address</p>\n    </div>\n</ng-template>\n","export class Address {\r\n    id: number;\r\n    streetAddress: string;\r\n    postalCode: string;\r\n    city: string;\r\n    stateProvince: string;\r\n    country: string;\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Ejercicio fleni';\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n        <a routerLink=\"employees\" class=\"nav-link\" routerLinkActive=\"active\">Employee List</a>\n    </li>\n    <li class=\"nav-item\">\n        <a routerLink=\"add\" class=\"nav-link\" routerLinkActive=\"active\">Add Employee</a>\n    </li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <hr>\n  <div class=\"card\">\n    <div class=\"card-body\">\n        <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<footer class=\"footer\">\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\nimport { CreateAddressComponent } from './create-address/create-address.component';\nimport { AddressDetailsComponent } from './address-details/address-details.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateEmployeeComponent,\n    EmployeeDetailsComponent,\n    EmployeeListComponent,\n    UpdateEmployeeComponent,\n    CreateAddressComponent,\n    AddressDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { EmployeeDetailsComponent } from './employee-details/employee-details.component';\r\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'employees', pathMatch: 'full' },\r\n  { path: 'employees', component: EmployeeListComponent },\r\n  { path: 'add', component: CreateEmployeeComponent },\r\n  { path: 'update/:id', component: UpdateEmployeeComponent },\r\n  { path: 'details/:id', component: EmployeeDetailsComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { EmployeeService } from '../employee.service';\nimport { Address } from '../address';\nimport { Employee } from '../employee';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-address',\n  templateUrl: './create-address.component.html',\n  styleUrls: ['./create-address.component.css']\n})\nexport class CreateAddressComponent implements OnInit {\n\n  address: Address = new Address();\n  @Input() employee;\n  @Output() addressChange = new EventEmitter();\n  submitted = false;\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  save() {\n    this.employeeService\n    .addAddress(this.employee.id, this.address).subscribe(data => {\n      console.log(data)\n      this.addressChange.emit();\n    }, \n    error => console.log(error));\n  }\n\n  addressSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n}","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n    <form #addressForm=\"ngForm\" (ngSubmit)=\"addressSubmit()\">\n        <h4>NEW ADDRESS</h4>\n        <div class=\"form-group\">\n            <label for=\"name\">Street</label>\n            <input type=\"text\" class=\"form-control\" id=\"streetAddress\" required [(ngModel)]=\"address.streetAddress\" name=\"streetAddress\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"name\">Postal Code</label>\n            <input type=\"text\" class=\"form-control\" id=\"postalCode\" required [(ngModel)]=\"address.postalCode\" name=\"postalCode\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"name\">City</label>\n            <input type=\"text\" class=\"form-control\" id=\"city\" required [(ngModel)]=\"address.city\" name=\"city\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"name\">State Province</label>\n            <input type=\"text\" class=\"form-control\" id=\"stateProvince\" required [(ngModel)]=\"address.stateProvince\" name=\"stateProvince\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"name\">Country</label>\n            <input type=\"text\" class=\"form-control\" id=\"country\" required [(ngModel)]=\"address.country\" name=\"country\">\n        </div>\n\n        <br>\n\n        <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n        <br>\n    </form>\n</div>","import { EmployeeService } from '../employee.service';\nimport { Employee } from '../employee';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  employee: Employee = new Employee();\n  submitted = false;\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  newEmployee(): void {\n    this.submitted = false;\n    this.employee = new Employee();\n  }\n\n  save() {\n    this.employeeService\n    .createEmployee(this.employee).subscribe(data => {\n      console.log(data)\n      this.employee = new Employee();\n      this.gotoList();\n    }, \n    error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n}","<h3>Create Employee</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"emailId\" required [(ngModel)]=\"employee.email\" name=\"email\">\n    </div>\n      \n    <div class=\"form-group\">\n      <label for=\"name\">Phone Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" required [(ngModel)]=\"employee.phoneNumber\" name=\"phoneNumber\">\n    </div>\n      \n    <div class=\"form-group\">\n      <label for=\"name\">Hire Date</label>\n      <input type=\"date\" class=\"form-control\" id=\"hireDate\" required [(ngModel)]=\"employee.hireDate\" name=\"hireDate\">\n    </div>\n      \n    <div class=\"form-group\">\n      <label for=\"name\">Salary</label>\n      <input type=\"number\" class=\"form-control\" id=\"salary\" required [(ngModel)]=\"employee.salary\" name=\"salary\">\n    </div>\n      \n    <div class=\"form-group\">\n      <label for=\"name\">Commission Percent</label>\n      <input type=\"number\" class=\"form-control\" id=\"commissionPct\" required [(ngModel)]=\"employee.commissionPct\" name=\"commissionPct\">\n    </div>\n\n    <br>\n\n     \n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You submitted successfully!</h4>\n  <!-- <button class=\"btn btn-success\" (click)=\"newEmployee()\">Add</button> -->\n</div>","import { Employee } from '../employee';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { EmployeeListComponent } from '../employee-list/employee-list.component';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n  createAddress = false;\n  newEmployee: Employee;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  list(){\n    this.router.navigate(['employees']);\n  }\n  \n  newAddress() {\n    this.createAddress = true;\n  }\n  \n  loadData(){\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n    \n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n  \n  handleAddressChange(event){\n    console.log(\"hola\");\n    this.loadData();\n  }\n}","<h2>Employee Details</h2> \n\n<hr/>\n<div *ngIf=\"employee\">\n  <div>\n    <label><b>First Name: </b></label> {{employee.firstName}}\n  </div>\n  <div>\n    <label><b>Last Name: </b></label> {{employee.lastName}}\n  </div>\n  <div>\n    <label><b>Email: </b></label> {{employee.email}}\n  </div>\n  <div>\n    <label><b>Phone Number: </b></label> {{employee.phoneNumber}}\n  </div> \n  <div>\n    <label><b>Hire Date: </b></label> {{employee.hireDate}}\n  </div> \n  <div>\n    <label><b>Salary: </b></label> {{employee.salary}}\n  </div> \n  <div>\n    <label><b>Commission Percent: </b></label> {{employee.commissionPct}} %\n  </div>\n  <br>\n  <div>\n    <h4><b>ADDRESSES </b> <button (click)=\"newAddress()\" class=\"btn btn-primary\">New</button></h4>\n  </div>\n    <app-create-address [employee]=\"employee\" (addressChange)=\"handleAddressChange($event)\" [hidden]=\"!createAddress\"></app-create-address>\n    <app-address-details [addresses]=\"employee.addresses\"></app-address-details>\n</div>\n\n<br>\n<br>\n<button (click)=\"list()\" class=\"btn btn-primary\">Back to Employee List</button><br>","import { EmployeeDetailsComponent } from '../employee-details/employee-details.component';\nimport { Observable } from \"rxjs\";\nimport { EmployeeService } from \"../employee.service\";\nimport { Employee } from \"../employee\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-employee-list\",\n  templateUrl: \"./employee-list.component.html\",\n  styleUrls: [\"./employee-list.component.css\"]\n})\nexport class EmployeeListComponent implements OnInit {\n  employees: Observable<Employee[]>;\n  searchText = '';\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.employees = this.employeeService.getEmployeesList();\n  }\n\n  deleteEmployee(id: number) {\n    this.employeeService.deleteEmployee(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  employeeDetails(id: number){\n    this.router.navigate(['details', id]);\n  }\n  \n  buscarTexto(){\n    if(this.searchText != \"\"){\n        this.employees = this.employeeService.searchEmployee(this.searchText);\n    } else {\n        this.reloadData();\n    }\n  }\n}","<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Employee List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <div class=\"input-group\">\n      <input type=\"text\" class=\"form-control\" id=\"search-text\" aria-describedby=\"search-text\" \n        [(ngModel)]=\"searchText\" placeholder=\"Enter text to search\">\n      <div class=\"input-group-append\">\n        <input type=\"button\" value=\"Search\" (click)=\"buscarTexto()\" class=\"btn btn-outline-secondary\"/>\n      </div>\n    </div>\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n          <th>Phone Number</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let employee of employees | async\">\n          <td>{{employee.firstName}}</td>\n          <td>{{employee.lastName}}</td>\n          <td>{{employee.email}}</td>\n          <td>{{employee.phoneNumber}}</td>\n          <td><button (click)=\"deleteEmployee(employee.id)\" class=\"btn btn-danger\">Delete</button>\n              <button (click)=\"employeeDetails(employee.id)\" class=\"btn btn-info\" style=\"margin-left: 10px\">Details</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private baseUrl = 'http://localhost:8080/employees';\n\n  constructor(private http: HttpClient) { }\n\n  getEmployee(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createEmployee(employee: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, employee);\n  }\n\n  updateEmployee(id: number, value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${id}`, value);\n  }\n\n  deleteEmployee(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getEmployeesList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n      \n  searchEmployee(text: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/search/${text}`);\n  }\n      \n  addAddress(id: number, value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${id}/address`, value);\n  }\n}","import { Address } from './address';\r\n\r\nexport class Employee {\r\n    id: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phoneNumber: string;\r\n    hireDate: Date;\r\n    salary: number;\r\n    commissionPct: number;\r\n    addresses?: Address[];\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n  submitted = false\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n    \n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n\n  updateEmployee() {\n    this.employeeService.updateEmployee(this.id, this.employee)\n      .subscribe(data => {\n        console.log(data);\n        this.employee = new Employee();\n        this.gotoList();\n      }, error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.updateEmployee();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n}","<h3>Update Employee</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Email Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"emailId\" required [(ngModel)]=\"employee.email\" name=\"email\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}